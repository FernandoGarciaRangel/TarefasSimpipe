@page "/categories/delete"
@using Microsoft.EntityFrameworkCore
@using SimCloudTest.Models
@inject IDbContextFactory<SimCloudTest.Data.AppDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Deletar</h1>

<p>Tem certeza que deseja apagar essa tarefa?</p>
<div>
    <h2>Tarefas</h2>
    <hr />
    @if (category is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Título</dt>
            <dd class="col-sm-10">@category.Title</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Descrição</dt>
            <dd class="col-sm-10">@category.Description</dd>
        </dl>
        <EditForm method="post" Model="category" OnValidSubmit="DeleteCategory" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(category is null)">Apagar</button> |
            <a href="/categories">Voltar para lista de tarefas</a>
        </EditForm>
    }
</div>

@code {
    private Category? category;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        category = await context.Categories.FirstOrDefaultAsync(m => m.Id == Id);

        if (category is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteCategory()
    {
        using var context = DbFactory.CreateDbContext();
        context.Categories.Remove(category!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/categories");
    }
}
